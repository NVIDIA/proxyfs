# Default .conf file

# Each "peer" in the cluster is listed here... but, for now, there should only be one (for a given node)
[Peer:Peer0]
PublicIPAddr:  192.168.22.40
PrivateIPAddr: 192.168.23.40
ReadCacheQuotaFraction: 0.20

# Identifies what "peers" make up the cluster (there should only be one for now) and which one "we" are
[Cluster]
WhoAmI:                Peer0
Peers:                 Peer0
ServerGuid:            0bb51164-258f-4e04-a417-e16d736ca41c
PrivateClusterUDPPort: 5001
HeartBeatInterval:     100ms
HeartBeatVariance:     5ms
HeartBeatExpiration:   400ms
MessageExpiration:     700ms
RequestExpiration:     1s
UDPReadSize:           8000
UDPWriteSize:          7000

# Specifies the path particulars to the "NoAuth" WSGI pipeline
[SwiftClient]
NoAuthIPAddr:                 127.0.0.1
NoAuthTCPPort:                8090
Timeout:                      10s
RetryLimit:                   5
RetryLimitObject:             5
RetryDelay:                   1s
RetryDelayObject:             1s
RetryExpBackoff:              1.2
RetryExpBackoffObject:        2.0
ChunkedConnectionPoolSize:    512
NonChunkedConnectionPoolSize: 128

# A flow control specification driving Recover Point Objective (RPO) support... potentially common to multiple shares
[FlowControl:CommonFlowControl]
MaxFlushSize:       10485760
MaxFlushTime:       10s
ReadCacheLineSize:  1048576
ReadCacheWeight:    100

# A storage policy into which the chunks of files and directories will go
[PhysicalContainerLayout:CommonVolumePhysicalContainerLayoutReplicated3Way]
ContainerStoragePolicy:      silver
ContainerNamePrefix:         Replicated3Way_
ContainersPerPeer:           10
MaxObjectsPerContainer:      1000000

# A set of snapshot schedules in crontab format + keep count
#
# CronTab fields are:
#
#   field          allowed values
#   -----          --------------
#   minute         0-59
#   hour           0-23
#   day of month   1-31
#   month          1-12
#   day of week    0-6  (0 == Sunday)
#
# Note that full crontab parsing is not supported... only single values are allowed for each field
[SnapShotSchedule:MinutelySnapShotSchedule]
CronTab:                                  * * * * * # Every minute
Keep:                                     59

[SnapShotSchedule:HourlySnapShotSchedule]
CronTab:                                  0 * * * * # At the top of every hour
Keep:                                     23

[SnapShotSchedule:DailySnapShotSchedule]
CronTab:                                  0 0 * * * # At midnight every day
Keep:                                     6

[SnapShotSchedule:WeeklySnapShotSchedule]
CronTab:                                  0 0 * * 0 # At midnight every Sunday
Keep:                                     8

[SnapShotSchedule:MonthlySnapShotSchedule]
CronTab:                                  0 0 1 * * # At midnight on the first of every month
Keep:                                     11

[SnapShotSchedule:YearlySnapShotSchedule]
CronTab:                                  0 0 1 1 * # At midnight on the January 1st of every year
Keep:                                     4

# A snapshot policy referencing one or more snapshot schedules
#
# If TimeZone is not specified or is either "" or "UTC", Etc/UTC is used
# If TimeZone is "Local", the local time zone is used
# Otherwise, the TimeZone must be from the IANA Time Zone database, such as "America/Los_Angeles"
#
# TimeZone is used to both compute the time for each scheduled snapshot
# as well as how to name each taken snapshot using the format specified in RFC3339
[SnapShotPolicy:CommonSnapShotPolicy]
ScheduleList:                             MinutelySnapShotSchedule,HourlySnapShotSchedule,DailySnapShotSchedule,WeeklySnapShotSchedule,MonthlySnapShotSchedule,YearlySnapShotSchedule
TimeZone:                                 America/Los_Angeles

# A description of a volume of the file system... along with references to storage policies and flow control
#
# PrimaryPeer should be the lone Peer in Cluster.Peers that will serve this Volume
# StandbyPeerList can be left blank for now until such time as failover is supported
[Volume:CommonVolume]
FSID:                                    1
FUSEMountPointName:                      CommonMountPoint
NFSExportName:                           CommonExport
SMBShareName:                            CommonShare
PrimaryPeer:                             Peer0
StandbyPeerList:
AccountName:                             AUTH_test
NonceValuesToReserve:                    100
MaxEntriesPerDirNode:                    32
MaxExtentsPerFileNode:                   32
MaxInodesPerMetadataNode:                32
MaxLogSegmentsPerMetadataNode:           64
MaxDirFileNodesPerMetadataNode:          16
MaxCreatedDeletedObjectsPerMetadataNode: 256
CheckpointContainerName:                 .__checkpoint__
CheckpointContainerStoragePolicy:        gold
CheckpointInterval:                      10s
#ReplayLogFileName:                       CommonVolume.rlog
DefaultPhysicalContainerLayout:          CommonVolumePhysicalContainerLayoutReplicated3Way
FlowControl:                             CommonFlowControl
SnapShotIDNumBits:                       10
MaxBytesInodeCache:                      10485760
InodeCacheEvictInterval:                 1s
SnapShotPolicy:                          CommonSnapShotPolicy # Optional

# Describes the set of volumes of the file system listed above
[FSGlobals]
VolumeList:                               CommonVolume
InodeRecCacheEvictLowLimit:               10000
InodeRecCacheEvictHighLimit:              10010
LogSegmentRecCacheEvictLowLimit:          10000
LogSegmentRecCacheEvictHighLimit:         10010
BPlusTreeObjectCacheEvictLowLimit:        10000
BPlusTreeObjectCacheEvictHighLimit:       10010
CreatedDeletedObjectsCacheEvictLowLimit:  10000
CreatedDeletedObjectsCacheEvictHighLimit: 10010
DirEntryCacheEvictLowLimit:               10000
DirEntryCacheEvictHighLimit:              10010
FileExtentMapEvictLowLimit:               10000
FileExtentMapEvictHighLimit:              10010

# RPC path from file system clients (both Samba and "normal" WSGI stack)... needs to be shared with them
[JSONRPCServer]
TCPPort:         12345
FastTCPPort:     32345
DataPathLogging: false
Debug:           false

# Log reporting parameters
[Logging]
LogFilePath:       proxyfsd.log
LogToConsole:      false # when true, log to stderr even when LogFilePath is set
TraceLevelLogging: none  # Enable trace logging on a per-package basis. Supported values: jrpcfs, inode, none (default)
DebugLevelLogging: none  # Enable debug logging on a per-package basis. Supported values: ldlm, fs, jrpcfs, inode, none (default)
# NOTE: Log levels other than Trace and Debug are always on.

[EventLog]
Enabled:          false
BufferKey:        1234
BufferLength:     1048576 # 1MiB
MinBackoff:       1us
MaxBackoff:       2us
DaemonPollDelay:  10ms
DaemonOutputPath:         # If blank, os.Stdout is used

# Stats reporting parameters (must contain either a UDPPort or TCPPort)
[Stats]
UDPPort:      8125
BufferLength: 1000
MaxLatency:   1s

# HTTP server
[HTTPServer]
TCPPort:           15346
JobHistoryMaxSize:     5

[StatsLogger]

# Write selected memory, connection, and Swift operation statistics
# to the log once each Period. The minimum Period is 10 min.  Use
# 0 to disable statistic logging.
#
Period: 10m
