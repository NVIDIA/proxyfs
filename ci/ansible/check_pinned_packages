#!/usr/bin/env python3

# Copyright (c) 2015-2021, NVIDIA CORPORATION.
# SPDX-License-Identifier: Apache-2.0

"""
We decided to not pin packages anymore, but if we ever decide to do it again, this
should still work, as long as the file ci/ansible/chef_files/packages/rhel.json keeps
using the same conventions as when this script was created, which looks something like
this:

{
  "proxyfs_packages": [
    ["json-c-devel", "0.11-4.el7_0"],
    ["fuse", "2.9.3-5.el7"]
  ],
  "wireshark_packages": [
    ["wireshark"],
    ["libcap"]
  ],
  "ssh_packages": [
    ["sshpass"]
  ],
  "gdb_packages": [
    ["gdb", "7.6.1-120.el7"],
    ["yum-utils"]
  ],
  "utils_packages": [
    ["atop"],
    ["vim-common"]
  ]
}
"""

import json
import os
import subprocess
import sys


script_dir = os.path.abspath(os.path.dirname(__file__))
json_path = os.path.join(script_dir, "chef_files", "packages", "rhel.json")

with open(json_path, "r") as json_file:
    versions_data = json.load(json_file)

everything_ok = True
for section, packages in versions_data.items():
    for package_info in packages:
        if len(package_info) == 1:
            continue
        package, pinned_version = package_info
        try:
            yum_versions = subprocess.check_output(
                "repoquery {} --queryformat '%{{vr}}'".format(package),
                shell=True,
                stderr=subprocess.STDOUT,
            )
        except subprocess.CalledProcessError as e:
            print("! Error checking {}: {}".format(package, e.output.strip()))
            everything_ok = False
            continue
        yum_versions = yum_versions.strip().split("\n")
        if pinned_version not in yum_versions:
            print(
                "{} not ok! pinned: {} | found in yum: {}".format(
                    package, pinned_version, ", ".join(yum_versions)
                )
            )
            everything_ok = False

if everything_ok:
    print("All pinned packages are installable")
else:
    print("\nFinished with errors")
    sys.exit(1)
